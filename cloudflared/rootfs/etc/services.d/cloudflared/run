#!/usr/bin/with-contenv bashio
# ==============================================================================
# Home Assistant Add-on: Cloudflared
# Runs the Cloudfalred tunnel for HomeAssistant
# ==============================================================================
declare default_config=/tmp/config.json

if bashio::config.true 'quick_tunnel'; then
    bashio::log.debug "Checking if SSL is used..."
    if bashio::var.true "$(bashio::core.ssl)" ; then
        ha_service_protocol="https"
    else
        ha_service_protocol="http"
    fi
    bashio::log.info "Connecting Cloudflared Quick Tunnel..."
    exec cloudflared --no-autoupdate \
    tunnel --loglevel="${CLOUDFLARED_LOG}" --url "${ha_service_protocol}://homeassistant:$(bashio::core.port)"

elif bashio::config.has_value 'tunnel_token' ; then
    tunnel_token=$(bashio::config 'tunnel_token')
    exec cloudflared --no-autoupdate \
            tunnel --loglevel="${CLOUDFLARED_LOG}" run --token="${tunnel_token}"

else
    data_path="/data"
    if bashio::config.has_value 'data_folder'; then
        data_path="/$(bashio::config 'data_folder')/cloudflared"
    fi
    # Check status file which exists when custom_config exists
    if bashio::config.true "custom_config"; then
        config="${data_path}/config.yml"
    else
        config="${default_config}"
    fi
    certificate="${data_path}/cert.pem"
    tunnel_name="$(bashio::config 'tunnel_name')"

    bashio::log.info "Connecting Cloudflared Tunnel..."
    bashio::log.debug "using ${config} config file"
    
    exec cloudflared --origincert=${certificate} --no-autoupdate \
        tunnel --config=${config} --loglevel="${CLOUDFLARED_LOG}" run "${tunnel_name}"
fi
